plugins {
    id 'java'
}

group 'gruppun'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

apply plugin: "java"
apply plugin: "pmd"
apply plugin: "findbugs"
apply plugin: 'checkstyle'
apply plugin: "application"
apply plugin: "jacoco"

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.15.10'
    implementation 'com.github.javaparser:javaparser-core-serialization:3.15.10'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
}

mainClassName = 'Main'

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

findbugs {
    ignoreFailures = false
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    toolVersion '6.8.0'
    ignoreFailures = false

    pmdTest.enabled = false
    consoleOutput false
    sourceSets = [sourceSets.main]
    ruleSetFiles = files(
                    "config/pmd/ruleSet.xml",
                    "config/pmd/bestpractices.xml",
                    "config/pmd/design.xml",
                    "config/pmd/errorprone.xml")
}

jacoco {
    toolVersion '0.8.2'
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}


checkstyle {
    toolVersion '8.11'
    checkstyleTest.enabled = false
    ignoreFailures false
    configFile file("config/checkstyle/checkstyle.xml")
    maxWarnings 0
}
checkstyleMain {
    source = 'src/main'
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
    jacocoTestReport
}
