plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id "com.github.spotbugs" version "3.0.0"
    id "de.marcphilipp.nexus-publish" version '0.2.0'
}

sourceCompatibility = 11
targetCompatibility = 11

// project.group = "com.github.bachelor-thesis-project-gruppun"

repositories {
    mavenCentral()
}

apply plugin: "java"
apply plugin: "pmd"
apply plugin: 'checkstyle'
apply plugin: "application"
apply plugin: "jacoco"
apply plugin: "maven-publish"
apply plugin: 'signing'

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
    implementation 'com.github.javaparser:javaparser-core:3.15.12'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.15.12'
    implementation 'com.github.javaparser:javaparser-core-serialization:3.15.10'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
    compile group: 'com.github.spotbugs', name: 'spotbugs', version: '4.0.0', ext: 'pom'
    implementation 'com.github.spotbugs:spotbugs:4.0.0'
}

mainClassName = 'Main'

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    // configure automatically generated tasks
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
pmd {
    toolVersion '6.21.0'
    ignoreFailures = false
    pmdTest.enabled = false
    consoleOutput false
    sourceSets = [sourceSets.main]
    ruleSetFiles = files("$project.rootDir/config/pmd/rules-pmd.xml")
    ruleSets = [] // Remove built in rulesets
}

jacoco {
    toolVersion '0.8.2'
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}


checkstyle {
    toolVersion '8.29'
    checkstyleTest.enabled = false
    ignoreFailures false
//    configFile file("config/checkstyle/checkstyle.xml")
    maxWarnings 0
}

checkstyleMain {
    source = 'src/main'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
    jacocoTestReport
    testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped"]
        showStandardStreams = true
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
//    from javadoc.destinationDir
    from javadoc
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign(publishing.publications)
}

gradlePlugin {
    plugins {
        staticAnalyser {
            id = "StaticAnalyser"
            implementationClass = "plugin.AnalyserPlugin"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.bachelor-thesis-project-gruppun'
            artifactId = 'staticanalyser'
            version = '1.3.0.3'
            from components.java

            pom {
                name = "Staticanalyser"
                description = "A static design pattern verification plugin."
                url = "https://github.com/Bachelor-Thesis-Project-Gruppun/StaticAnalyser/"
                organization {
                    name = 'com.github.bachelor-thesis-project-gruppun'
                    url = 'https://github.com/Bachelor-Thesis-Project-Gruppun'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/Bachelor-Thesis-Project-Gruppun/StaticAnalyser/issues'
                }
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/Bachelor-Thesis-Project-Gruppun/StaticAnalyser/blob/develop/LICENSE"
                        distribution = "repo"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:Bachelor-Thesis-Project-Gruppun/StaticAnalyser.git"
                    developerConnection = "scm:git:ssh@github.com:Bachelor-Thesis-Project-Gruppun/StaticAnalyser.git"
                    url = "https://github.com/Bachelor-Thesis-Project-Gruppun/StaticAnalyser"
                }
                developers {
                    developer {
                        id = "ViddeM"
                        name = "Vidar Magnusson"
                        email = "maven-central@vidarmagnusson.com"
                    }
                    developer {
                        id = "Jhogne"
                        name = "Jonas Högne"
                        email = "jonas.hogne@gmail.com"
                    }
                    developer {
                        id = "erclp"
                        name = "Eric Carlsson"
                        email = "cirecirecire3@gmail.com"
                    }
                    developer {
                        id = "lir108"
                        name = "Li Rönning"
                        email = ""
                    }
                    developer {
                        id = "darkarca"
                        name = "Erik Gunnarsson"
                        email = ""
                    }
                    developer {
                        id = "mvacante"
                        name = "Marcel Vacante"
                        email = "vacante@student.chalmers.se"
                    }
                }
            }

            artifact sourceJar
            artifact javadocJar
        }
    }
}

nexusPublishing {
    packageGroup = 'com.github.bachelor-thesis-project-gruppun'
    username = sonatypeUsername
    password = sonatypePassword
}
