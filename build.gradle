plugins {
    id 'java'
    id 'java-gradle-plugin'
    id "com.github.spotbugs" version "3.0.0"
}

version = 11
sourceCompatibility = 11
targetCompatibility = 11

group 'gruppun'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

apply plugin: "java"
apply plugin: "pmd"
apply plugin: 'checkstyle'
apply plugin: "application"
apply plugin: "jacoco"

// https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.github.javaparser:javaparser-core:3.15.12'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.15.12'
    implementation 'com.github.javaparser:javaparser-core-serialization:3.15.10'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
    compile group: 'com.github.spotbugs', name: 'spotbugs', version: '4.0.0', ext: 'pom'
    implementation 'com.github.spotbugs:spotbugs:4.0.0'
}

mainClassName = 'Main'


//
//spotbugs {
//    effort="max"
//}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    // configure automatically generated tasks
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    toolVersion '6.21.0'
    ignoreFailures = false
    pmdTest.enabled = false
    consoleOutput false
    sourceSets = [sourceSets.main]
//    ruleSetFiles = files(
//                    "config/pmd/ruleSet.xml",
//                    "config/pmd/bestpractices.xml",
//                    "config/pmd/design.xml",
//                    "config/pmd/errorprone.xml")
}

jacoco {
    toolVersion '0.8.2'
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}


checkstyle {
    toolVersion '8.11'
    checkstyleTest.enabled = false
    ignoreFailures false
    configFile file("config/checkstyle/checkstyle.xml")
    maxWarnings 0
}
checkstyleMain {
    source = 'src/main'
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
    jacocoTestReport
}
